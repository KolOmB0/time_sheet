# -*- coding: utf-8 -*-
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import os


class DataEntryWindow_1(QtWidgets.QWidget):
    def __init__(self):
        super().__init__()
        self.setObjectName("self")
        self.resize(528, 288)
        self.lineEdit = QtWidgets.QLineEdit(self)
        self.lineEdit.setGeometry(QtCore.QRect(100, 30, 411, 31))
        self.lineEdit.setObjectName("lineEdit")

        self.label = QtWidgets.QLabel(self)
        self.label.setGeometry(QtCore.QRect(10, 30, 81, 31))
        self.label.setMinimumSize(QtCore.QSize(0, 31))
        self.label.setScaledContents(False)
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setWordWrap(False)
        self.label.setTextInteractionFlags(QtCore.Qt.LinksAccessibleByMouse)
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self)
        self.label_2.setGeometry(QtCore.QRect(10, 70, 81, 31))
        self.label_2.setMinimumSize(QtCore.QSize(0, 31))
        self.label_2.setScaledContents(False)
        self.label_2.setAlignment(QtCore.Qt.AlignCenter)
        self.label_2.setWordWrap(False)
        self.label_2.setTextInteractionFlags(QtCore.Qt.LinksAccessibleByMouse)
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(self)
        self.label_3.setGeometry(QtCore.QRect(10, 110, 81, 31))
        self.label_3.setMinimumSize(QtCore.QSize(0, 31))
        self.label_3.setScaledContents(False)
        self.label_3.setAlignment(QtCore.Qt.AlignCenter)
        self.label_3.setWordWrap(False)
        self.label_3.setTextInteractionFlags(QtCore.Qt.LinksAccessibleByMouse)
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(self)
        self.label_4.setGeometry(QtCore.QRect(90, 140, 151, 71))
        self.label_4.setMinimumSize(QtCore.QSize(0, 31))
        self.label_4.setScaledContents(False)
        self.label_4.setAlignment(QtCore.Qt.AlignCenter)
        self.label_4.setWordWrap(True)
        self.label_4.setTextInteractionFlags(QtCore.Qt.LinksAccessibleByMouse)
        self.label_4.setObjectName("label_4")

        self.dateEdit = QtWidgets.QDateEdit(self)
        self.dateEdit.setGeometry(QtCore.QRect(300, 160, 101, 31))
        self.dateEdit.setObjectName("dateEdit")
        self.dateEdit.setCalendarPopup(True)
        self.dateEdit.setDisplayFormat("dd.MM.yyyy")
        self.dateEdit.setDate(QtCore.QDate.currentDate())

        self.pushButton = QtWidgets.QPushButton(self)
        self.pushButton.setGeometry(QtCore.QRect(190, 220, 101, 41))
        self.pushButton.setObjectName("pushButton")
        self.comboBox = QtWidgets.QComboBox(self)
        self.comboBox.setGeometry(QtCore.QRect(100, 71, 411, 31))
        self.comboBox.setObjectName("comboBox")
        self.comboBox.setCurrentIndex(0)
        self.comboBox.addItems(["Аппаратчик", "Мастер смены", "Мастер по сырью"])
        self.comboBox_2 = QtWidgets.QComboBox(self)
        self.comboBox_2.setGeometry(QtCore.QRect(100, 110, 411, 31))
        self.comboBox_2.setObjectName("comboBox_2")
        self.comboBox_2.setCurrentIndex(0)
        self.comboBox_2.addItems(["Пятидневка", "Cмена A", "Cмена B", "Cмена C", "Cмена D"])
        self.pushButton.clicked.connect(self.save_data)

        self.retranslateUi()
        QtCore.QMetaObject.connectSlotsByName(self)

    def retranslateUi(self):
        _translate = QtCore.QCoreApplication.translate
        self.setWindowTitle(_translate("self", "Карточка сотрудника"))
        self.label.setText(_translate("self", "ФИО"))
        self.label_2.setText(_translate("self", "Должность"))
        self.label_3.setText(_translate("self", "Смена"))
        self.label_4.setText(_translate("self", "Дата устройства на работу   ( Первый рабочий день)"))
        self.pushButton.setText(_translate("self", "Сохранить"))

    def make_file_writable(self, file_path):
        os.chmod(file_path, 0o666)

    def make_file_readonly(self, file_path):
        os.chmod(file_path, 0o444)

    def worc_text_fio(self, fio):
        name_parts = fio.strip().split()
        name_parts = [part.capitalize() for part in name_parts]
        return " ".join(name_parts)

    def save_data(self):
        # Get data from widgets
        self.file_path = "employee_data.txt"
        if not os.path.exists(self.file_path):
            try:
                open(self.file_path, 'w').close()
                self.make_file_writable(self.file_path)
            except Exception as e:
                msg = QtWidgets.QMessageBox()
                msg.setWindowTitle("Ошибка")
                msg.setText(f"Ошибка при создании файла: {e}")
                msg.setStandardButtons(QtWidgets.QMessageBox.Ok)
                msg.exec_()
                return

        self.make_file_writable(self.file_path)
        try:
            fio = self.lineEdit.text().strip()
            if not fio:
                msg = QtWidgets.QMessageBox()
                msg.setWindowTitle("Ошибка")
                msg.setText("Поле ФИО не может быть пустым")
                msg.setStandardButtons(QtWidgets.QMessageBox.Ok)
                msg.exec_()
                return
            fio = self.worc_text_fio(fio)
            position = self.comboBox.currentText()
            shift = self.comboBox_2.currentText()
            start_date = self.dateEdit.date().toString("yyyy-MM-dd")

            new_entry = f"ФИО: {fio}, Должность: {position}, Смена: {shift}, Дата устройства на работу: {start_date}\n"

            # Read existing data
            try:
                with open(self.file_path, "r") as file:
                    existing_data = file.readlines()
            except Exception as e:
                msg = QtWidgets.QMessageBox()
                msg.setWindowTitle("Ошибка")
                msg.setText(f"Ошибка при чтении файла: {e}")
                msg.setStandardButtons(QtWidgets.QMessageBox.Ok)
                msg.exec_()
                return

            # Add new data to existing data
            existing_data.append(new_entry)

            # Sort data by ФИО
            sorted_data = sorted(existing_data, key=lambda x: x.split(",")[0])

            # Write sorted data back to file
            try:
                with open(self.file_path, "w") as file:
                    file.writelines(sorted_data)
            except Exception as e:
                msg = QtWidgets.QMessageBox()
                msg.setWindowTitle("Ошибка")
                msg.setText(f"Ошибка при записи файла: {e}")
                msg.setStandardButtons(QtWidgets.QMessageBox.Ok)
                msg.exec_()
                return

            # Optional: Show a message box to confirm save
            msg = QtWidgets.QMessageBox()
            msg.setWindowTitle("Сохранение данных")
            msg.setText("Данные успешно сохранены!")
            msg.setStandardButtons(QtWidgets.QMessageBox.Ok)
            msg.exec_()
        finally:
            self.make_file_readonly(self.file_path)
            if fio:
                self.close()

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    current = DataEntryWindow_1()
    current.show()
    sys.exit(app.exec_())
